{
  "stats": {
    "suites": 6,
    "tests": 21,
    "passes": 21,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-23T05:55:19.260Z",
    "end": "2023-08-23T05:55:19.618Z",
    "duration": 358,
    "testsRegistered": 21,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "17285569-af69-4da5-aaa4-66ef3f531423",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "017892cb-ccca-47fb-a1e0-1f9b99fbeca6",
          "title": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<<",
          "fullFile": "/home/mind/practice/TEST_CASE/mocha_unit_test_user_system/test/user-case/user.spec.js",
          "file": "/test/user-case/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ">>>>> Failure : first name required",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : first name required",
              "timedOut": false,
              "duration": 46,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    email: \"testUser1@gmail.com\",\n    lastName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "cd3cd15d-b5f0-49fc-a8d5-f976e9428af1",
              "parentUUID": "017892cb-ccca-47fb-a1e0-1f9b99fbeca6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : user first name not blank",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : user first name not blank",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    firstName: \"\",\n    email: \"testUser1@gmail.com\",\n    lastName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "15b4e08b-fa43-463e-81b8-3cf354ddf437",
              "parentUUID": "017892cb-ccca-47fb-a1e0-1f9b99fbeca6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : user first name not be max 20 character",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : user first name not be max 20 character",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    firstName: \"1234567890-1234567890\",\n    email: \"testUser1@gmail.com\",\n    lastName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "adcaffe5-43cd-4d13-b050-0b16324aadb6",
              "parentUUID": "017892cb-ccca-47fb-a1e0-1f9b99fbeca6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : last name required",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : last name required",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    email: \"testUser1@gmail.com\",\n    firstName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "b4c6f9fd-92a9-44ee-a5af-a8881914d8f0",
              "parentUUID": "017892cb-ccca-47fb-a1e0-1f9b99fbeca6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : user last name not blank",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : user last name not blank",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    lastName: \"\",\n    email: \"testUser1@gmail.com\",\n    firstName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "60fd3906-3c14-4f8b-8e4a-6078eda56c5b",
              "parentUUID": "017892cb-ccca-47fb-a1e0-1f9b99fbeca6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : user last name not be max 20 character",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : user last name not be max 20 character",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    lastName: \"1234567890-1234567890\",\n    email: \"testUser1@gmail.com\",\n    firstName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "26c7f618-2c8f-401a-b372-0eccbd5ac68f",
              "parentUUID": "017892cb-ccca-47fb-a1e0-1f9b99fbeca6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : email required",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : email required",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    firstName: \"tester\",\n    lastName: \"testData\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "4eb90719-d63f-45ec-80e5-ef06927d797f",
              "parentUUID": "017892cb-ccca-47fb-a1e0-1f9b99fbeca6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : user email not blank",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : user email not blank",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    lastName: \"test\",\n    email: \"\",\n    firstName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "287d0bf5-b716-444b-bad0-3ebb262028eb",
              "parentUUID": "017892cb-ccca-47fb-a1e0-1f9b99fbeca6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : user email not be max 50 character",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : user email not be max 50 character",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    lastName: \"123456\",\n    email: \"1234567890-12345678901234567890123456789012345gmail.com\",\n    firstName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "b7fa13e2-97b2-4d95-894c-08838b7d870c",
              "parentUUID": "017892cb-ccca-47fb-a1e0-1f9b99fbeca6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : user enter valid email ID",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : user enter valid email ID",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    lastName: \"test\",\n    email: \"1234567890-12345678901234567890123456789012345678901341\",\n    firstName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "af68b695-ab79-4e8c-8b49-6497914b108e",
              "parentUUID": "017892cb-ccca-47fb-a1e0-1f9b99fbeca6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd3cd15d-b5f0-49fc-a8d5-f976e9428af1",
            "15b4e08b-fa43-463e-81b8-3cf354ddf437",
            "adcaffe5-43cd-4d13-b050-0b16324aadb6",
            "b4c6f9fd-92a9-44ee-a5af-a8881914d8f0",
            "60fd3906-3c14-4f8b-8e4a-6078eda56c5b",
            "26c7f618-2c8f-401a-b372-0eccbd5ac68f",
            "4eb90719-d63f-45ec-80e5-ef06927d797f",
            "287d0bf5-b716-444b-bad0-3ebb262028eb",
            "b7fa13e2-97b2-4d95-894c-08838b7d870c",
            "af68b695-ab79-4e8c-8b49-6497914b108e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 126,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c207b431-fed1-4634-800d-4ee3f4c6c67a",
          "title": ">>>>>>>>>>>> Test Login API <<<<<<<<<<<<",
          "fullFile": "/home/mind/practice/TEST_CASE/mocha_unit_test_user_system/test/user-case/user.spec.js",
          "file": "/test/user-case/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ">>>>> Success : login with access auth route",
              "fullTitle": ">>>>>>>>>>>> Test Login API <<<<<<<<<<<< >>>>> Success : login with access auth route",
              "timedOut": false,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/login\")\n  .send({\n    password: \"User1234\",\n    email: \"radhamishra12@gmail.com\",\n  })\n  .end((err, res) => {\n    res.body.should.have.property(\"token\");\n    var token = res.body.token;\n    chai\n      .request(server)\n      .get(\"/user-todo\")\n      .set({ Authorization: `Bearer ${token}` })\n      .end(function (error, response) {\n        response.should.have.status(200);\n        done();\n      });\n  });",
              "err": {},
              "uuid": "644da46d-59b0-4c74-8026-59613094fca0",
              "parentUUID": "c207b431-fed1-4634-800d-4ee3f4c6c67a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : login with No user exists",
              "fullTitle": ">>>>>>>>>>>> Test Login API <<<<<<<<<<<< >>>>> Failure : login with No user exists",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/login\")\n  .send({\n    password: \"User1234\",\n    email: \"radha@gmail.com\",\n  })\n  .end((err, res) => {\n    expect(res.status).to.be.equal(404);\n    done();\n  });",
              "err": {},
              "uuid": "15cdac6e-fccb-4f66-bf19-f83ac2c019fe",
              "parentUUID": "c207b431-fed1-4634-800d-4ee3f4c6c67a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : login with Password incorrect",
              "fullTitle": ">>>>>>>>>>>> Test Login API <<<<<<<<<<<< >>>>> Failure : login with Password incorrect",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/login\")\n  .send({\n    password: \"User123\",\n    email: \"radhamishra12@gmail.com\",\n  })\n  .end((err, response) => {\n    response.should.have.status(401);\n    response.should.be.json;\n    response.body.should.be.a(\"object\");\n    done();\n  });",
              "err": {},
              "uuid": "7eb10009-6dd2-496a-b275-41095a1f65e6",
              "parentUUID": "c207b431-fed1-4634-800d-4ee3f4c6c67a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "644da46d-59b0-4c74-8026-59613094fca0",
            "15cdac6e-fccb-4f66-bf19-f83ac2c019fe",
            "7eb10009-6dd2-496a-b275-41095a1f65e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 120,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ec2eb95c-65b8-4886-aeb9-2909bc5c457a",
          "title": ">>>>>>>>>>>> Test User Listing API <<<<<<<<<<<<<",
          "fullFile": "/home/mind/practice/TEST_CASE/mocha_unit_test_user_system/test/user-case/user.spec.js",
          "file": "/test/user-case/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success : get all user",
              "fullTitle": ">>>>>>>>>>>> Test User Listing API <<<<<<<<<<<<< Success : get all user",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .get(\"/user-list\")\n  .end((err, response) => {\n    expect(response.status).to.be.equal(200);\n    expect(response.body).to.have.all.keys(\"data\");\n    done();\n  });",
              "err": {},
              "uuid": "b0633916-815c-41b4-93d6-63892152c330",
              "parentUUID": "ec2eb95c-65b8-4886-aeb9-2909bc5c457a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success : get search user",
              "fullTitle": ">>>>>>>>>>>> Test User Listing API <<<<<<<<<<<<< Success : get search user",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .get(\"/user-list\")\n  .end((err, response) => {\n    expect(response.status).to.be.equal(200);\n    expect(response.body).to.have.all.keys(\"data\");\n    done();\n  });",
              "err": {},
              "uuid": "5108e096-61b0-4c5e-9cab-da33fa4fc325",
              "parentUUID": "ec2eb95c-65b8-4886-aeb9-2909bc5c457a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0633916-815c-41b4-93d6-63892152c330",
            "5108e096-61b0-4c5e-9cab-da33fa4fc325"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e49449df-8b9f-4f9b-9272-b50dd9b5409d",
          "title": ">>>>>>>>>>>> Update User API <<<<<<<<<<<<<",
          "fullFile": "/home/mind/practice/TEST_CASE/mocha_unit_test_user_system/test/user-case/user.spec.js",
          "file": "/test/user-case/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Failure : user not exists",
              "fullTitle": ">>>>>>>>>>>> Update User API <<<<<<<<<<<<< Failure : user not exists",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .patch('/user/10')\n  .send({\n    firstName:\"test\",\n    lastName:\"user\"\n  })\n  .end((err, response) => {\n    response.should.have.status(404);\n    response.body.should.have.property('message');\n    done();\n  });",
              "err": {},
              "uuid": "f5cd10dd-bf71-4cf6-9d43-5e0c2482fba2",
              "parentUUID": "e49449df-8b9f-4f9b-9272-b50dd9b5409d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success : update user",
              "fullTitle": ">>>>>>>>>>>> Update User API <<<<<<<<<<<<< Success : update user",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .patch('/user/3')\n  .send({\n    firstName:\"test\",\n    lastName:\"user\"\n  })\n  .end((err, response) => {\n    response.should.have.status(200);\n    response.body.should.have.property('message');\n    done();\n  });",
              "err": {},
              "uuid": "a5881704-d1e5-46a2-b413-bb865e5e493f",
              "parentUUID": "e49449df-8b9f-4f9b-9272-b50dd9b5409d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f5cd10dd-bf71-4cf6-9d43-5e0c2482fba2",
            "a5881704-d1e5-46a2-b413-bb865e5e493f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0b16ce24-6425-4d62-9d99-f53ca790750f",
          "title": ">>>>>>>>>>>> Get Specific User Data <<<<<<<<<<<<<",
          "fullFile": "/home/mind/practice/TEST_CASE/mocha_unit_test_user_system/test/user-case/user.spec.js",
          "file": "/test/user-case/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Failure : user not exists",
              "fullTitle": ">>>>>>>>>>>> Get Specific User Data <<<<<<<<<<<<< Failure : user not exists",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .get('/user/10')\n  .send({\n    firstName:\"test\",\n    lastName:\"user\"\n  })\n  .end((err, response) => {\n    response.should.have.status(404);\n    response.body.should.have.property('message');\n    done();\n  });",
              "err": {},
              "uuid": "ef1f02a4-1d3f-416f-869b-c2f3fe8db5fc",
              "parentUUID": "0b16ce24-6425-4d62-9d99-f53ca790750f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success : get user data",
              "fullTitle": ">>>>>>>>>>>> Get Specific User Data <<<<<<<<<<<<< Success : get user data",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .get('/user/3')\n  .end((err, response) => {\n    response.should.have.status(200);\n    response.body.should.have.property('message');\n    done();\n  });",
              "err": {},
              "uuid": "cce6f9dc-e831-482f-94bc-7535b37d3d80",
              "parentUUID": "0b16ce24-6425-4d62-9d99-f53ca790750f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef1f02a4-1d3f-416f-869b-c2f3fe8db5fc",
            "cce6f9dc-e831-482f-94bc-7535b37d3d80"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "95dff284-dfb6-4a3c-a41a-614fcdb1bc5a",
          "title": ">>>>>>>>>>>> Delete User Data <<<<<<<<<<<<<",
          "fullFile": "/home/mind/practice/TEST_CASE/mocha_unit_test_user_system/test/user-case/user.spec.js",
          "file": "/test/user-case/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Failure : user not exists",
              "fullTitle": ">>>>>>>>>>>> Delete User Data <<<<<<<<<<<<< Failure : user not exists",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .delete('/user/10')\n  .end((err, response) => {\n    response.should.have.status(404);\n    response.body.should.have.property('message');\n    done();\n  });",
              "err": {},
              "uuid": "e642eddf-2ea9-478e-9a18-681c1abc6f12",
              "parentUUID": "95dff284-dfb6-4a3c-a41a-614fcdb1bc5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success : delete user data",
              "fullTitle": ">>>>>>>>>>>> Delete User Data <<<<<<<<<<<<< Success : delete user data",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .delete('/user/3')\n  .end((err, response) => {\n    response.should.have.status(200);\n    response.body.should.have.property('message');\n    done();\n  });",
              "err": {},
              "uuid": "cf002582-6b51-4928-872f-cd1c80092e13",
              "parentUUID": "95dff284-dfb6-4a3c-a41a-614fcdb1bc5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e642eddf-2ea9-478e-9a18-681c1abc6f12",
            "cf002582-6b51-4928-872f-cd1c80092e13"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "customReportFilename",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "customReportDir",
        "reportFilename": "customReportFilename"
      },
      "version": "6.2.0"
    }
  }
}