{
  "stats": {
    "suites": 3,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-23T05:03:53.821Z",
    "end": "2023-08-23T05:03:54.049Z",
    "duration": 228,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8964f21f-1f42-4d2d-ba17-5bc9ed5ea2cf",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "33a3c3b7-43db-4542-b50c-9ebdad42aeac",
          "title": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<<",
          "fullFile": "/home/mind/practice/TEST_CASE/mocha_unit_test_user_system/test/user-case/user.spec.js",
          "file": "/test/user-case/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ">>>>> Failure : first name required",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : first name required",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    email: \"testUser1@gmail.com\",\n    lastName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "3ae21ab5-10d0-40b7-9737-fc3ea96fce64",
              "parentUUID": "33a3c3b7-43db-4542-b50c-9ebdad42aeac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : user first name not blank",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : user first name not blank",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    firstName: \"\",\n    email: \"testUser1@gmail.com\",\n    lastName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "e08a4cc6-9e9a-4970-ab49-45f24cfaf612",
              "parentUUID": "33a3c3b7-43db-4542-b50c-9ebdad42aeac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : user first name not be max 20 character",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : user first name not be max 20 character",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    firstName: \"1234567890-1234567890\",\n    email: \"testUser1@gmail.com\",\n    lastName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "5822d5c8-b22d-4511-83ff-aad9b68eaaf6",
              "parentUUID": "33a3c3b7-43db-4542-b50c-9ebdad42aeac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : last name required",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : last name required",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    email: \"testUser1@gmail.com\",\n    firstName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "61dd345f-79c9-4640-9dd9-857e2c03e0de",
              "parentUUID": "33a3c3b7-43db-4542-b50c-9ebdad42aeac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : user last name not blank",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : user last name not blank",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    lastName: \"\",\n    email: \"testUser1@gmail.com\",\n    firstName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "560acff8-4e1e-4b88-91e7-0343dbc80e39",
              "parentUUID": "33a3c3b7-43db-4542-b50c-9ebdad42aeac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : user last name not be max 20 character",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : user last name not be max 20 character",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    lastName: \"1234567890-1234567890\",\n    email: \"testUser1@gmail.com\",\n    firstName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "2914137d-953d-4303-a779-757248dc566d",
              "parentUUID": "33a3c3b7-43db-4542-b50c-9ebdad42aeac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : email required",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : email required",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    firstName: \"tester\",\n    lastName: \"testData\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "57a3874c-a03a-4957-a400-ea3ccd741a82",
              "parentUUID": "33a3c3b7-43db-4542-b50c-9ebdad42aeac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : user email not blank",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : user email not blank",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    lastName: \"test\",\n    email: \"\",\n    firstName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "f481be4a-4e67-404d-aff1-fcdb9bdd7abe",
              "parentUUID": "33a3c3b7-43db-4542-b50c-9ebdad42aeac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : user email not be max 50 character",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : user email not be max 50 character",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    lastName: \"123456\",\n    email: \"1234567890-12345678901234567890123456789012345gmail.com\",\n    firstName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "3e0b90dd-5281-4f69-bb68-976a8e1e8420",
              "parentUUID": "33a3c3b7-43db-4542-b50c-9ebdad42aeac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : user enter valid email ID",
              "fullTitle": ">>>>>>>>>>>> Test Register User API <<<<<<<<<<<<< >>>>> Failure : user enter valid email ID",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/add-user\")\n  .send({\n    lastName: \"test\",\n    email: \"1234567890-12345678901234567890123456789012345678901341\",\n    firstName: \"tester\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(400);\n    response.body.should.have.nested.property(\"meta.message\");\n    done();\n  });",
              "err": {},
              "uuid": "a4b2a4c0-3f67-46a6-b46d-393cba664fd7",
              "parentUUID": "33a3c3b7-43db-4542-b50c-9ebdad42aeac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ae21ab5-10d0-40b7-9737-fc3ea96fce64",
            "e08a4cc6-9e9a-4970-ab49-45f24cfaf612",
            "5822d5c8-b22d-4511-83ff-aad9b68eaaf6",
            "61dd345f-79c9-4640-9dd9-857e2c03e0de",
            "560acff8-4e1e-4b88-91e7-0343dbc80e39",
            "2914137d-953d-4303-a779-757248dc566d",
            "57a3874c-a03a-4957-a400-ea3ccd741a82",
            "f481be4a-4e67-404d-aff1-fcdb9bdd7abe",
            "3e0b90dd-5281-4f69-bb68-976a8e1e8420",
            "a4b2a4c0-3f67-46a6-b46d-393cba664fd7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 100,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "804e19eb-bfa6-47a0-b6a9-076ab6827053",
          "title": ">>>>>>>>>>>> Test Login API <<<<<<<<<<<<",
          "fullFile": "/home/mind/practice/TEST_CASE/mocha_unit_test_user_system/test/user-case/user.spec.js",
          "file": "/test/user-case/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ">>>>> Success : login with access auth route",
              "fullTitle": ">>>>>>>>>>>> Test Login API <<<<<<<<<<<< >>>>> Success : login with access auth route",
              "timedOut": false,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/login\")\n  .send({\n    password: \"User1234\",\n    email: \"radhamishra12@gmail.com\",\n  })\n  .end((err, res) => {\n    res.body.should.have.property(\"token\");\n    var token = res.body.token;\n    chai\n      .request(server)\n      .get(\"/user-todo\")\n      .set({ Authorization: `Bearer ${token}` })\n      .end(function (error, response) {\n        response.should.have.status(200);\n        done();\n      });\n  });",
              "err": {},
              "uuid": "b87276a3-5b06-4606-9394-8723111b8de7",
              "parentUUID": "804e19eb-bfa6-47a0-b6a9-076ab6827053",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : login with No user exists",
              "fullTitle": ">>>>>>>>>>>> Test Login API <<<<<<<<<<<< >>>>> Failure : login with No user exists",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/login\")\n  .send({\n    password: \"User1234\",\n    email: \"radha@gmail.com\",\n  })\n  .end((err, res) => {\n    expect(res.status).to.be.equal(404);\n    done();\n  });",
              "err": {},
              "uuid": "b9ac447d-37bb-4b6b-b191-8d5f8102769d",
              "parentUUID": "804e19eb-bfa6-47a0-b6a9-076ab6827053",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ">>>>> Failure : login with Password incorrect",
              "fullTitle": ">>>>>>>>>>>> Test Login API <<<<<<<<<<<< >>>>> Failure : login with Password incorrect",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .post(\"/login\")\n  .send({\n    password: \"User123\",\n    email: \"radhamishra12@gmail.com\",\n  })\n  .end((err, response) => {\n    expect(response.status).to.be.equal(401);\n    response.should.have.status(401);\n    response.should.be.json;\n    response.body.should.be.a(\"object\");\n    done();\n  });",
              "err": {},
              "uuid": "e2e234f9-002b-44ce-af4b-b970a7139867",
              "parentUUID": "804e19eb-bfa6-47a0-b6a9-076ab6827053",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b87276a3-5b06-4606-9394-8723111b8de7",
            "b9ac447d-37bb-4b6b-b191-8d5f8102769d",
            "e2e234f9-002b-44ce-af4b-b970a7139867"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 83,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e7b1c09b-4d30-4e2b-aa89-5fc4212ebf20",
          "title": ">>>>>>>>>>>> Test User Listing API <<<<<<<<<<<<<",
          "fullFile": "/home/mind/practice/TEST_CASE/mocha_unit_test_user_system/test/user-case/user.spec.js",
          "file": "/test/user-case/user.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success : get all user",
              "fullTitle": ">>>>>>>>>>>> Test User Listing API <<<<<<<<<<<<< Success : get all user",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .get(\"/user-list\")\n  .end((err, response) => {\n    expect(response.status).to.be.equal(200);\n    expect(response.body).to.have.all.keys(\"data\");\n    done();\n  });",
              "err": {},
              "uuid": "6af9ab31-3fee-46f2-9b21-d171d12c38a7",
              "parentUUID": "e7b1c09b-4d30-4e2b-aa89-5fc4212ebf20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success : get search user",
              "fullTitle": ">>>>>>>>>>>> Test User Listing API <<<<<<<<<<<<< Success : get search user",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .get(\"/user-list\")\n  .end((err, response) => {\n    expect(response.status).to.be.equal(200);\n    expect(response.body).to.have.all.keys(\"data\");\n    done();\n  });",
              "err": {},
              "uuid": "a940ec4f-e4cf-4007-ab5f-2c099d1bc078",
              "parentUUID": "e7b1c09b-4d30-4e2b-aa89-5fc4212ebf20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6af9ab31-3fee-46f2-9b21-d171d12c38a7",
            "a940ec4f-e4cf-4007-ab5f-2c099d1bc078"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "customReportFilename",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "customReportDir",
        "reportFilename": "customReportFilename"
      },
      "version": "6.2.0"
    }
  }
}